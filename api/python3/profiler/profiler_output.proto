syntax = "proto3";

package profiler_output;

option go_package = "./proto";

service Profiler {
  rpc SendProfilerOutput (ProfilerOutputRequest) returns (Response);
}

message FuncParams {
  string arg = 1;
  string arg_name = 2;
  string type = 3;
}

message ProfilerOutput {
  string function_name = 1;
  string function_id = 2;
  string function_caller = 3;
  float start_time = 4;
  float end_time = 5;
  float execution_time = 6; // in milliseconds
  float memory_usage = 7;
  float cpu_usage = 8;
  repeated FuncParams func_params = 9;
}

message ProfilerOutputRequest {
  string token = 1;
  ProfilerOutput profiler_output = 2;
}

message Response {
  bool ok = 1;
  string message = 2;
}
