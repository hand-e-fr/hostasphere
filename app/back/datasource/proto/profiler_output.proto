syntax = "proto3";

package profiler_output;

option go_package = "./proto";

service Profiler {
  rpc SendProfilerOutput (ProfilerOutputRequest) returns (Response);
}

message FuncParams {
  string arg = 1;
  string arg_name = 2;
  string type = 3;
}

message ReturnedValue {
  string value = 1;
  string type = 2;
}

message FuncCaller {
  string caller_file = 1;
  int64 caller_line = 2;
  string caller = 3;
}

message ProfilerOutput {
  string function_name = 1;
  string function_id = 2;
  repeated FuncCaller function_callers = 3;
  string token_id = 4;
  double start_time = 5;
  int64 start_date = 6;
  double end_time = 7;
  int64 end_date = 8;
  double execution_time = 9; // in milliseconds
  double memory_usage = 10;
  double cpu_usage = 11;
  repeated FuncParams func_params = 12;
  ReturnedValue returned_value = 13;
  string session_uuid = 14;
}

message ProfilerOutputRequest {
  string token = 1;
  ProfilerOutput profiler_output = 2;
}

message Response {
  bool ok = 1;
  string message = 2;
}
