//
// Hand-e project, 2024
// hostasphere python profiler api
// File description:
// session.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.6
// source: proto/session.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UsageAtTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time        float64 `protobuf:"fixed64,1,opt,name=time,proto3" json:"time,omitempty"`
	MemoryUsage float64 `protobuf:"fixed64,2,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
}

func (x *UsageAtTime) Reset() {
	*x = UsageAtTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_session_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsageAtTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageAtTime) ProtoMessage() {}

func (x *UsageAtTime) ProtoReflect() protoreflect.Message {
	mi := &file_proto_session_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageAtTime.ProtoReflect.Descriptor instead.
func (*UsageAtTime) Descriptor() ([]byte, []int) {
	return file_proto_session_proto_rawDescGZIP(), []int{0}
}

func (x *UsageAtTime) GetTime() float64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *UsageAtTime) GetMemoryUsage() float64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

type TrackAnnotation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time       float64 `protobuf:"fixed64,1,opt,name=time,proto3" json:"time,omitempty"`
	Annotation string  `protobuf:"bytes,2,opt,name=annotation,proto3" json:"annotation,omitempty"`
	Color      string  `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"` // hex color
}

func (x *TrackAnnotation) Reset() {
	*x = TrackAnnotation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_session_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackAnnotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackAnnotation) ProtoMessage() {}

func (x *TrackAnnotation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_session_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackAnnotation.ProtoReflect.Descriptor instead.
func (*TrackAnnotation) Descriptor() ([]byte, []int) {
	return file_proto_session_proto_rawDescGZIP(), []int{1}
}

func (x *TrackAnnotation) GetTime() float64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *TrackAnnotation) GetAnnotation() string {
	if x != nil {
		return x.Annotation
	}
	return ""
}

func (x *TrackAnnotation) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionUuid      string             `protobuf:"bytes,1,opt,name=session_uuid,json=sessionUuid,proto3" json:"session_uuid,omitempty"`
	SessionTag       string             `protobuf:"bytes,2,opt,name=session_tag,json=sessionTag,proto3" json:"session_tag,omitempty"`
	StartTime        float64            `protobuf:"fixed64,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StartDate        int64              `protobuf:"varint,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndTime          float64            `protobuf:"fixed64,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	EndDate          int64              `protobuf:"varint,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	ExecutionTime    float64            `protobuf:"fixed64,7,opt,name=execution_time,json=executionTime,proto3" json:"execution_time,omitempty"` // in milliseconds
	MemoryUsage      []*UsageAtTime     `protobuf:"bytes,8,rep,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	CpuUsage         []*UsageAtTime     `protobuf:"bytes,9,rep,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	DiskUsage        []*UsageAtTime     `protobuf:"bytes,10,rep,name=disk_usage,json=diskUsage,proto3" json:"disk_usage,omitempty"`
	NetworkUsage     []*UsageAtTime     `protobuf:"bytes,11,rep,name=network_usage,json=networkUsage,proto3" json:"network_usage,omitempty"`
	TokensUsage      []*UsageAtTime     `protobuf:"bytes,12,rep,name=tokens_usage,json=tokensUsage,proto3" json:"tokens_usage,omitempty"`
	TokenId          string             `protobuf:"bytes,13,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Pid              int64              `protobuf:"varint,14,opt,name=pid,proto3" json:"pid,omitempty"`
	Hostname         string             `protobuf:"bytes,15,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Os               string             `protobuf:"bytes,16,opt,name=os,proto3" json:"os,omitempty"`
	OsVersion        string             `protobuf:"bytes,17,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	KernelVersion    string             `protobuf:"bytes,18,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"`
	Architecture     string             `protobuf:"bytes,19,opt,name=architecture,proto3" json:"architecture,omitempty"`
	PythonVersion    string             `protobuf:"bytes,20,opt,name=python_version,json=pythonVersion,proto3" json:"python_version,omitempty"`
	Processor        string             `protobuf:"bytes,21,opt,name=processor,proto3" json:"processor,omitempty"`
	CpuCount         int32              `protobuf:"varint,22,opt,name=cpu_count,json=cpuCount,proto3" json:"cpu_count,omitempty"`
	BootTime         float64            `protobuf:"fixed64,23,opt,name=boot_time,json=bootTime,proto3" json:"boot_time,omitempty"`
	CurrentUser      string             `protobuf:"bytes,24,opt,name=current_user,json=currentUser,proto3" json:"current_user,omitempty"`
	TrackAnnotations []*TrackAnnotation `protobuf:"bytes,25,rep,name=track_annotations,json=trackAnnotations,proto3" json:"track_annotations,omitempty"`
}

func (x *Session) Reset() {
	*x = Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_session_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_proto_session_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_proto_session_proto_rawDescGZIP(), []int{2}
}

func (x *Session) GetSessionUuid() string {
	if x != nil {
		return x.SessionUuid
	}
	return ""
}

func (x *Session) GetSessionTag() string {
	if x != nil {
		return x.SessionTag
	}
	return ""
}

func (x *Session) GetStartTime() float64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Session) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *Session) GetEndTime() float64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Session) GetEndDate() int64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *Session) GetExecutionTime() float64 {
	if x != nil {
		return x.ExecutionTime
	}
	return 0
}

func (x *Session) GetMemoryUsage() []*UsageAtTime {
	if x != nil {
		return x.MemoryUsage
	}
	return nil
}

func (x *Session) GetCpuUsage() []*UsageAtTime {
	if x != nil {
		return x.CpuUsage
	}
	return nil
}

func (x *Session) GetDiskUsage() []*UsageAtTime {
	if x != nil {
		return x.DiskUsage
	}
	return nil
}

func (x *Session) GetNetworkUsage() []*UsageAtTime {
	if x != nil {
		return x.NetworkUsage
	}
	return nil
}

func (x *Session) GetTokensUsage() []*UsageAtTime {
	if x != nil {
		return x.TokensUsage
	}
	return nil
}

func (x *Session) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *Session) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *Session) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Session) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Session) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *Session) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *Session) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *Session) GetPythonVersion() string {
	if x != nil {
		return x.PythonVersion
	}
	return ""
}

func (x *Session) GetProcessor() string {
	if x != nil {
		return x.Processor
	}
	return ""
}

func (x *Session) GetCpuCount() int32 {
	if x != nil {
		return x.CpuCount
	}
	return 0
}

func (x *Session) GetBootTime() float64 {
	if x != nil {
		return x.BootTime
	}
	return 0
}

func (x *Session) GetCurrentUser() string {
	if x != nil {
		return x.CurrentUser
	}
	return ""
}

func (x *Session) GetTrackAnnotations() []*TrackAnnotation {
	if x != nil {
		return x.TrackAnnotations
	}
	return nil
}

type SaveSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token   string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Session *Session `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *SaveSessionRequest) Reset() {
	*x = SaveSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_session_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveSessionRequest) ProtoMessage() {}

func (x *SaveSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_session_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveSessionRequest.ProtoReflect.Descriptor instead.
func (*SaveSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_session_proto_rawDescGZIP(), []int{3}
}

func (x *SaveSessionRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SaveSessionRequest) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

type SaveSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok      bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SaveSessionResponse) Reset() {
	*x = SaveSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_session_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveSessionResponse) ProtoMessage() {}

func (x *SaveSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_session_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveSessionResponse.ProtoReflect.Descriptor instead.
func (*SaveSessionResponse) Descriptor() ([]byte, []int) {
	return file_proto_session_proto_rawDescGZIP(), []int{4}
}

func (x *SaveSessionResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *SaveSessionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_session_proto protoreflect.FileDescriptor

var file_proto_session_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x44, 0x0a, 0x0b,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x5b, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x41, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22,
	0x9d, 0x07, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x67, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x2f, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x41, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x64, 0x69, 0x73, 0x6b,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x0c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35,
	0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x41, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x79, 0x74, 0x68,
	0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x79, 0x74, 0x68, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f,
	0x6f, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x62,
	0x6f, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x11, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x54, 0x0a, 0x12, 0x53, 0x61, 0x76, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x07, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x56, 0x0a, 0x0e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x53, 0x61, 0x76, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e,
	0x53, 0x61, 0x76, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09,
	0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_session_proto_rawDescOnce sync.Once
	file_proto_session_proto_rawDescData = file_proto_session_proto_rawDesc
)

func file_proto_session_proto_rawDescGZIP() []byte {
	file_proto_session_proto_rawDescOnce.Do(func() {
		file_proto_session_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_session_proto_rawDescData)
	})
	return file_proto_session_proto_rawDescData
}

var file_proto_session_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_session_proto_goTypes = []any{
	(*UsageAtTime)(nil),         // 0: token.UsageAtTime
	(*TrackAnnotation)(nil),     // 1: token.TrackAnnotation
	(*Session)(nil),             // 2: token.Session
	(*SaveSessionRequest)(nil),  // 3: token.SaveSessionRequest
	(*SaveSessionResponse)(nil), // 4: token.SaveSessionResponse
}
var file_proto_session_proto_depIdxs = []int32{
	0, // 0: token.Session.memory_usage:type_name -> token.UsageAtTime
	0, // 1: token.Session.cpu_usage:type_name -> token.UsageAtTime
	0, // 2: token.Session.disk_usage:type_name -> token.UsageAtTime
	0, // 3: token.Session.network_usage:type_name -> token.UsageAtTime
	0, // 4: token.Session.tokens_usage:type_name -> token.UsageAtTime
	1, // 5: token.Session.track_annotations:type_name -> token.TrackAnnotation
	2, // 6: token.SaveSessionRequest.session:type_name -> token.Session
	3, // 7: token.SessionService.SaveSession:input_type -> token.SaveSessionRequest
	4, // 8: token.SessionService.SaveSession:output_type -> token.SaveSessionResponse
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_proto_session_proto_init() }
func file_proto_session_proto_init() {
	if File_proto_session_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_session_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*UsageAtTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_session_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TrackAnnotation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_session_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_session_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SaveSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_session_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SaveSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_session_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_session_proto_goTypes,
		DependencyIndexes: file_proto_session_proto_depIdxs,
		MessageInfos:      file_proto_session_proto_msgTypes,
	}.Build()
	File_proto_session_proto = out.File
	file_proto_session_proto_rawDesc = nil
	file_proto_session_proto_goTypes = nil
	file_proto_session_proto_depIdxs = nil
}
